definitions:
  entity.City:
    properties:
      country:
        type: string
      history:
        type: integer
      id:
        type: integer
      name:
        type: string
      resort:
        type: integer
    type: object
  entity.Flight:
    properties:
      from:
        type: integer
      id:
        type: integer
      pilot:
        type: integer
      starttime:
        type: string
      to:
        type: integer
      treveltime:
        type: integer
    type: object
  entity.Pilot:
    properties:
      age:
        type: integer
      experience:
        type: integer
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      secondname:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample swagger for second RCSP lab
  termsOfService: http://swagger.io/terms/
  title: 2lab API
  version: "1.0"
paths:
  /city:
    post:
      consumes:
      - application/json
      description: Getting City by Id in detail
      parameters:
      - description: Request of Creating City Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.City'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting City by Id
      tags:
      - Citis
    put:
      consumes:
      - application/json
      description: Updating City in detail
      parameters:
      - description: Request of Updating City Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.City'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Updating City
      tags:
      - Citis
  /city/{id}:
    delete:
      consumes:
      - application/json
      description: Deletting City by Id in detail
      parameters:
      - description: id of City
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Deletting City by Id
      tags:
      - Citis
    get:
      consumes:
      - application/json
      description: Getting City by Id in detail
      parameters:
      - description: id of City
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting City by Id
      tags:
      - Citis
  /flight:
    post:
      consumes:
      - application/json
      description: Getting Flight by Id in detail
      parameters:
      - description: Request of Creating Flight Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Flight'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting Flight by Id
      tags:
      - Flights
    put:
      consumes:
      - application/json
      description: Updating Flight in detail
      parameters:
      - description: Request of Updating Flight Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Flight'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Updating Flight
      tags:
      - Flights
  /flight/{id}:
    delete:
      consumes:
      - application/json
      description: Deletting Flight by Id in detail
      parameters:
      - description: id of Flight
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Deletting Flight by Id
      tags:
      - Flights
    get:
      consumes:
      - application/json
      description: Getting Flight by Id in detail
      parameters:
      - description: id of Flight
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting Flight by Id
      tags:
      - Flights
  /pilot:
    post:
      consumes:
      - application/json
      description: Getting Pilot by Id in detail
      parameters:
      - description: Request of Creating Pilot Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Pilot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting Pilot by Id
      tags:
      - Pilots
    put:
      consumes:
      - application/json
      description: Updating Pilot in detail
      parameters:
      - description: Request of Updating Pilot Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Pilot'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Updating Pilot
      tags:
      - Pilots
  /pilot/{id}:
    delete:
      consumes:
      - application/json
      description: Deletting Pilot by Id in detail
      parameters:
      - description: id of Pilot
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Deletting Pilot by Id
      tags:
      - Pilots
    get:
      consumes:
      - application/json
      description: Getting Pilots by Id in detail
      parameters:
      - description: id of Pilot
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Getting Pilots by Id
      tags:
      - Pilots
swagger: "2.0"
